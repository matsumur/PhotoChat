<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAgGBgcGBQgHBwcJCQgKDBQNDAsLDBkSEw8UHRofHh0aHBwg
        JC4nICIsIxwcKDcpLDAxNDQ0Hyc5PTgyPC4zNDL/2wBDAQkJCQwLDBgNDRgyIRwhMjIyMjIyMjIyMjIy
        MjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjL/wAARCABkAQQDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDufKo8qrvlUeVX0HOfkH1UpeVR5VXfKo8qjnD6qUvKo8qrvlUe
        VRzh9VKXlUeVV3yqPKo5w+qlLyqPKq75VHlUc4fVSl5VHlVd8qjyqOcPqpS8qjyqu+VR5VHOH1UpeVR5
        VXfKo8qjnD6qUvKo8qrvlUeVRzh9VKXlUeVV3yqPKo5w+qlLyqPKq75VHlUc4fVSl5VHlVd8qjyqOcPq
        pS8qjyqu+VR5VHOH1UpeVR5VXfKo8qjnD6qUvKo8qrvlUeVRzh9VKXlUeVV3yqPKo5w+qlLyqKu+VRRz
        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
</value>
  </data>
</root>